From 85f07c4b92b8c0c86266b86ba48b887483c2dfac Mon Sep 17 00:00:00 2001
From: Tim Lunn <tim@feathertop.org>
Date: Tue, 19 Sep 2023 19:36:39 +1000
Subject: [PATCH] dts: i2s and sound

Includes port of rockchip dummy codec from BSP kernel
---
 arch/arm/boot/dts/rv1126-pinctrl.dtsi     |  62 ++++++++++++
 arch/arm/boot/dts/rv1126-sonoff-ihost.dts |  52 +++++++++-
 arch/arm/boot/dts/rv1126.dtsi             |  26 +++++
 sound/soc/codecs/Kconfig                  |   4 +
 sound/soc/codecs/Makefile                 |   2 +
 sound/soc/codecs/dummy-codec.c            | 117 ++++++++++++++++++++++
 6 files changed, 258 insertions(+), 5 deletions(-)
 create mode 100644 sound/soc/codecs/dummy-codec.c

diff --git a/arch/arm/boot/dts/rv1126-pinctrl.dtsi b/arch/arm/boot/dts/rv1126-pinctrl.dtsi
index 0f5070d55..f2146bdc1 100644
--- a/arch/arm/boot/dts/rv1126-pinctrl.dtsi
+++ b/arch/arm/boot/dts/rv1126-pinctrl.dtsi
@@ -79,6 +79,68 @@ i2c2_xfer: i2c2-xfer {
 				<0 RK_PC3 1 &pcfg_pull_none_drv_level_0_smt>;
 		};
 	};
+	i2s0 {
+		/omit-if-no-ref/
+		i2s0m0_lrck_rx: i2s0m0-lrck-rx {
+			rockchip,pins =
+				/* i2s0m0_lrck_rx */
+				<3 RK_PD4 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_lrck_tx: i2s0m0-lrck-tx {
+			rockchip,pins =
+				/* i2s0m0_lrck_tx */
+				<3 RK_PD3 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_mclk: i2s0m0-mclk {
+			rockchip,pins =
+				/* i2s0m0_mclk */
+				<3 RK_PD2 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sclk_rx: i2s0m0-sclk-rx {
+			rockchip,pins =
+				/* i2s0m0_sclk_rx */
+				<3 RK_PD1 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sclk_tx: i2s0m0-sclk-tx {
+			rockchip,pins =
+				/* i2s0m0_sclk_tx */
+				<3 RK_PD0 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sdi0: i2s0m0-sdi0 {
+			rockchip,pins =
+				/* i2s0m0_sdi0 */
+				<3 RK_PD6 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sdo0: i2s0m0-sdo0 {
+			rockchip,pins =
+				/* i2s0m0_sdo0 */
+				<3 RK_PD5 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sdo1_sdi3: i2s0m0-sdo1-sdi3 {
+			rockchip,pins =
+				/* i2s0m0_sdo1_sdi3 */
+				<3 RK_PD7 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sdo2_sdi2: i2s0m0-sdo2-sdi2 {
+			rockchip,pins =
+				/* i2s0m0_sdo2_sdi2 */
+				<4 RK_PA0 1 &pcfg_pull_none>;
+		};
+		/omit-if-no-ref/
+		i2s0m0_sdo3_sdi1: i2s0m0-sdo3-sdi1 {
+			rockchip,pins =
+				/* i2s0m0_sdo3_sdi1 */
+				<4 RK_PA1 1 &pcfg_pull_none>;
+		};
+	};
 	rgmii {
 		/omit-if-no-ref/
 		rgmiim1_pins: rgmiim1-pins {
diff --git a/arch/arm/boot/dts/rv1126-sonoff-ihost.dts b/arch/arm/boot/dts/rv1126-sonoff-ihost.dts
index 4f4526ddc..65c1881d5 100644
--- a/arch/arm/boot/dts/rv1126-sonoff-ihost.dts
+++ b/arch/arm/boot/dts/rv1126-sonoff-ihost.dts
@@ -49,13 +49,31 @@ sdio_pwrseq: pwrseq-sdio {
 		reset-gpios = <&gpio1 RK_PD0 GPIO_ACTIVE_LOW>;
 	};
 
-	xin32k: xin32k {
-		compatible = "fixed-clock";
-		clock-frequency = <32768>;
-		clock-output-names = "xin32k";
-		#clock-cells = <0>;
+	dummy_codec: dummy-codec {
+		compatible = "rockchip,dummy-codec";
+		#sound-dai-cells = <0>;
 	};
 
+	rk809_sound: rk809-sound {
+		compatible = "simple-audio-card";
+		simple-audio-card,format = "i2s";
+		simple-audio-card,name = "rockchip,rk809-codec";
+		simple-audio-card,mclk-fs = <256>;
+		simple-audio-card,widgets =
+			"Microphone", "Mic Jack",
+			"Headphone", "Headphone Jack";
+		simple-audio-card,routing =
+			"Mic Jack", "MICBIAS1",
+			"IN1P", "Mic Jack",
+			"Headphone Jack", "HPOL",
+			"Headphone Jack", "HPOR";
+		simple-audio-card,cpu {
+			sound-dai = <&i2s0_8ch>;
+		};
+		simple-audio-card,codec {
+			sound-dai = <&dummy_codec>;
+		};
+	};
 };
 
 &cpu0 {
@@ -303,6 +321,18 @@ vcc_3v3: SWITCH_REG2 {
 				regulator-boot-on;
 			};
 		};
+		rk809_codec: codec {
+			#sound-dai-cells = <0>;
+			compatible = "rockchip,rk809-codec", "rockchip,rk817-codec";
+			clocks = <&cru MCLK_I2S0_TX_OUT2IO>;
+			clock-names = "mclk";
+			pinctrl-names = "default";
+			assigned-clocks = <&cru MCLK_I2S0_TX_OUT2IO>;
+			assigned-clock-parents = <&cru MCLK_I2S0_TX>;
+			pinctrl-0 = <&i2s0m0_mclk>;
+			hp-volume = <20>;
+			spk-volume = <3>;
+		};
 	};
 };
 
@@ -320,6 +350,18 @@ pcf8563: rtc@51 {
 	};
 };
 
+&i2s0_8ch {
+	status = "okay";
+	#sound-dai-cells = <0>;
+	rockchip,clk-trcm = <1>;
+	rockchip,i2s-rx-route = <3 1 2 0>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2s0m0_sclk_tx
+		     &i2s0m0_lrck_tx
+		     &i2s0m0_sdo0
+		     &i2s0m0_sdo1_sdi3>;
+};
+
 &gmac {
 	assigned-clocks = <&cru CLK_GMAC_SRC_M1>, <&cru CLK_GMAC_SRC>,
 			  <&cru CLK_GMAC_TX_RX>;
diff --git a/arch/arm/boot/dts/rv1126.dtsi b/arch/arm/boot/dts/rv1126.dtsi
index edf42d3be..8ffa045b4 100644
--- a/arch/arm/boot/dts/rv1126.dtsi
+++ b/arch/arm/boot/dts/rv1126.dtsi
@@ -229,6 +229,31 @@ i2c2: i2c@ff400000 {
 		status = "disabled";
 	};
 
+	i2s0_8ch: i2s@ff800000 {
+		compatible = "rockchip,rv1126-i2s-tdm";
+		reg = <0xff800000 0x1000>;
+		interrupts = <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru MCLK_I2S0_TX>, <&cru MCLK_I2S0_RX>, <&cru HCLK_I2S0>;
+		clock-names = "mclk_tx", "mclk_rx", "hclk";
+		dmas = <&dmac 20>, <&dmac 19>;
+		dma-names = "tx", "rx";
+		resets = <&cru SRST_I2S0_TX_M>, <&cru SRST_I2S0_RX_M>;
+		reset-names = "tx-m", "rx-m";
+		rockchip,cru = <&cru>;
+		rockchip,grf = <&grf>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2s0m0_sclk_tx
+			     &i2s0m0_sclk_rx
+			     &i2s0m0_lrck_tx
+			     &i2s0m0_lrck_rx
+			     &i2s0m0_sdi0
+			     &i2s0m0_sdo0
+			     &i2s0m0_sdo1_sdi3
+			     &i2s0m0_sdo2_sdi2
+			     &i2s0m0_sdo3_sdi1>;
+		status = "disabled";
+	};
+
 	uart1: serial@ff410000 {
 		compatible = "rockchip,rv1126-uart", "snps,dw-apb-uart";
 		reg = <0xff410000 0x100>;
@@ -319,6 +344,7 @@ u2phy_host: host-port {
 			status = "disabled";
 		};
 	};
+
 	uart0: serial@ff560000 {
 		compatible = "rockchip,rv1126-uart", "snps,dw-apb-uart";
 		reg = <0xff560000 0x100>;
diff --git a/sound/soc/codecs/Kconfig b/sound/soc/codecs/Kconfig
index 0904827e2..bd4aea230 100644
--- a/sound/soc/codecs/Kconfig
+++ b/sound/soc/codecs/Kconfig
@@ -97,6 +97,7 @@ config SND_SOC_ALL_CODECS
 	imply SND_SOC_DA732X
 	imply SND_SOC_DA9055
 	imply SND_SOC_DMIC
+	imply SND_SOC_DUMMY_CODEC
 	imply SND_SOC_ES8316
 	imply SND_SOC_ES8326
 	imply SND_SOC_ES8328_SPI
@@ -913,6 +914,9 @@ config SND_SOC_DMIC
 	  Enable support for the Generic Digital Microphone CODEC.
 	  Select this if your sound card has DMICs.
 
+config SND_SOC_DUMMY_CODEC
+        tristate "Dummy CODEC"
+
 config SND_SOC_HDMI_CODEC
 	tristate
 	select SND_PCM_ELD
diff --git a/sound/soc/codecs/Makefile b/sound/soc/codecs/Makefile
index 71d3ce586..0f458a3c2 100644
--- a/sound/soc/codecs/Makefile
+++ b/sound/soc/codecs/Makefile
@@ -99,6 +99,7 @@ snd-soc-da7219-objs := da7219.o da7219-aad.o
 snd-soc-da732x-objs := da732x.o
 snd-soc-da9055-objs := da9055.o
 snd-soc-dmic-objs := dmic.o
+snd-soc-dummy-codec-objs := dummy-codec.o
 snd-soc-es7134-objs := es7134.o
 snd-soc-es7241-objs := es7241.o
 snd-soc-es8316-objs := es8316.o
@@ -460,6 +461,7 @@ obj-$(CONFIG_SND_SOC_DA7219)	+= snd-soc-da7219.o
 obj-$(CONFIG_SND_SOC_DA732X)	+= snd-soc-da732x.o
 obj-$(CONFIG_SND_SOC_DA9055)	+= snd-soc-da9055.o
 obj-$(CONFIG_SND_SOC_DMIC)	+= snd-soc-dmic.o
+obj-$(CONFIG_SND_SOC_DUMMY_CODEC)	+= snd-soc-dummy-codec.o
 obj-$(CONFIG_SND_SOC_ES7134)	+= snd-soc-es7134.o
 obj-$(CONFIG_SND_SOC_ES7241)	+= snd-soc-es7241.o
 obj-$(CONFIG_SND_SOC_ES8316)    += snd-soc-es8316.o
diff --git a/sound/soc/codecs/dummy-codec.c b/sound/soc/codecs/dummy-codec.c
new file mode 100644
index 000000000..2cb3ae65d
--- /dev/null
+++ b/sound/soc/codecs/dummy-codec.c
@@ -0,0 +1,117 @@
+// SPDX-License-Identifier: GPL-2.0
+//
+// dummy_codec.c  --  dummy audio codec for rockchip
+//
+// Copyright (C) 2018 Fuzhou Rockchip Electronics Co., Ltd
+
+#include <linux/clk.h>
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/slab.h>
+#include <linux/of.h>
+#include <linux/of_gpio.h>
+#include <sound/soc.h>
+#include <sound/pcm.h>
+#include <sound/initval.h>
+
+struct dummy_codec_priv {
+	struct snd_soc_component *component;
+	struct clk *mclk;
+};
+
+static int dummy_codec_startup(struct snd_pcm_substream *substream,
+			       struct snd_soc_dai *dai)
+{
+	struct dummy_codec_priv *dcp = snd_soc_component_get_drvdata(dai->component);
+
+	if (!IS_ERR(dcp->mclk))
+		clk_prepare_enable(dcp->mclk);
+
+	return 0;
+}
+
+static void dummy_codec_shutdown(struct snd_pcm_substream *substream,
+				 struct snd_soc_dai *dai)
+{
+	struct dummy_codec_priv *dcp = snd_soc_component_get_drvdata(dai->component);
+
+	if (!IS_ERR(dcp->mclk))
+		clk_disable_unprepare(dcp->mclk);
+}
+
+static struct snd_soc_dai_ops dummy_codec_dai_ops = {
+	.startup	= dummy_codec_startup,
+	.shutdown	= dummy_codec_shutdown,
+};
+
+struct snd_soc_dai_driver dummy_dai = {
+	.name = "dummy_codec",
+	.playback = {
+		.stream_name = "Dummy Playback",
+		.channels_min = 1,
+		.channels_max = 384,
+		.rates = SNDRV_PCM_RATE_8000_384000,
+		.formats = (SNDRV_PCM_FMTBIT_S8 |
+			    SNDRV_PCM_FMTBIT_S16_LE |
+			    SNDRV_PCM_FMTBIT_S20_3LE |
+			    SNDRV_PCM_FMTBIT_S24_LE |
+			    SNDRV_PCM_FMTBIT_S32_LE),
+	},
+	.capture = {
+		.stream_name = "Dummy Capture",
+		.channels_min = 1,
+		.channels_max = 384,
+		.rates = SNDRV_PCM_RATE_8000_384000,
+		.formats = (SNDRV_PCM_FMTBIT_S8 |
+			    SNDRV_PCM_FMTBIT_S16_LE |
+			    SNDRV_PCM_FMTBIT_S20_3LE |
+			    SNDRV_PCM_FMTBIT_S24_LE |
+			    SNDRV_PCM_FMTBIT_S32_LE),
+	},
+	.ops = &dummy_codec_dai_ops,
+};
+
+static const struct snd_soc_component_driver soc_dummy_codec;
+
+static int rockchip_dummy_codec_probe(struct platform_device *pdev)
+{
+	struct dummy_codec_priv *dcp;
+
+	dcp = devm_kzalloc(&pdev->dev, sizeof(*dcp), GFP_KERNEL);
+	if (!dcp)
+		return -ENOMEM;
+
+	platform_set_drvdata(pdev, dcp);
+
+	/* optional mclk, if needs, assign mclk in dts node */
+	dcp->mclk = devm_clk_get(&pdev->dev, "mclk");
+	if (IS_ERR(dcp->mclk)) {
+		if (PTR_ERR(dcp->mclk) == -EPROBE_DEFER)
+			return -EPROBE_DEFER;
+		else if (PTR_ERR(dcp->mclk) != -ENOENT)
+			return -EINVAL;
+	}
+
+	return devm_snd_soc_register_component(&pdev->dev, &soc_dummy_codec,
+					       &dummy_dai, 1);
+}
+
+static const struct of_device_id rockchip_dummy_codec_of_match[] = {
+	{ .compatible = "rockchip,dummy-codec", },
+	{},
+};
+MODULE_DEVICE_TABLE(of, rockchip_dummy_codec_of_match);
+
+static struct platform_driver rockchip_dummy_codec_driver = {
+	.driver = {
+		.name = "dummy_codec",
+		.of_match_table = of_match_ptr(rockchip_dummy_codec_of_match),
+	},
+	.probe = rockchip_dummy_codec_probe,
+};
+
+module_platform_driver(rockchip_dummy_codec_driver);
+
+MODULE_AUTHOR("Sugar <sugar.zhang@rock-chips.com>");
+MODULE_DESCRIPTION("Rockchip Dummy Codec Driver");
+MODULE_LICENSE("GPL v2");
-- 
2.40.1

